package br.com.rich.uteis;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.FacesConverter;

import br.com.rich.repository.EstadoRepository;
import br.com.rich.model.EstadoModel;

@FacesConverter(value = "selectOneMenuConverter", forClass = EstadoModel.class)
public class SelectOneMenuConverter implements javax.faces.convert.Converter  {

	//EstadoRepository estadoRepository = new EstadoRepository();
	
	  @Override
	    public Object getAsObject(FacesContext fc, UIComponent uic, String value) {
		  if(value != null && value.trim().length() > 0) {
	        	try {
	        		EstadoRepository estadoRepository = (EstadoRepository) fc.getExternalContext().getApplicationMap().get("estadoRepository");
	                return service.getThemes().get(Integer.parseInt(value));
	            } catch(NumberFormatException e) {
	                throw new ConverterException(new FacesMessage(FacesMessage.SEVERITY_ERROR, "Conversion Error", "Not a valid theme."));
	            }
	        }
	        else {
	            return null;
	        }
	    }

	    @Override
	    public String getAsString(FacesContext fc, UIComponent uic, Object o) {
	        if (o != null && (o instanceof EstadoModel)) {
	            return String.valueOf(((EstadoModel) o).getId());
	        }

	        return null;
	    }
	
}





  

